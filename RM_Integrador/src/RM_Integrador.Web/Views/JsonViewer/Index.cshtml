@{
    ViewData["Title"] = "Buscar JSONs";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>Buscar JSONs - Sistema de Automa√ß√£o DataServer BH</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
        body { 
            background-color: #f8f9fa;
            min-height: 100vh;
            padding: 2rem 0;
        }

        .json-viewer-container {
            width: 100%;
            max-width: 1400px;
            margin: 0 auto;
        }

        .main-title {
            color: #2196F3;
            font-size: 1.75rem;
            margin-bottom: 2rem;
            text-align: center;
        }

        .search-box {
            background: white;
            border-radius: 8px;
            padding: 1rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 2rem;
        }

        .json-card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            height: calc(100vh - 250px);
            margin-bottom: 1rem;
        }

        .json-display {
            height: calc(100% - 60px);
            overflow: auto;
            background-color: #f8f9fa;
            padding: 1rem;
            border-radius: 4px;
            border: 1px solid #dee2e6;
            font-family: 'Consolas', monospace;
            font-size: 14px;
            line-height: 1.5;
            white-space: pre-wrap;
            tab-size: 2;
        }

        .card-header {
            background-color: #fff;
            border-bottom: 1px solid #dee2e6;
            padding: 1rem;
        }

        .btn-primary {
            background-color: #2196F3;
            border-color: #2196F3;
        }

        .btn-primary:hover {
            background-color: #1976D2;
            border-color: #1976D2;
        }

        .btn-outline-primary {
            color: #2196F3;
            border-color: #2196F3;
        }

        .btn-outline-primary:hover {
            background-color: #2196F3;
            border-color: #2196F3;
        }

        .back-button {
            position: absolute;
            top: 1rem;
            left: 1rem;
        }
    </style>
</head>
<body>
    <div class="container-fluid json-viewer-container">
        <a href="/User/Menu" class="btn btn-outline-primary back-button">
            ‚Üê Voltar ao Menu
        </a>

        <h2 class="main-title">üîç Buscar JSONs</h2>
        
        <div class="search-box">
            <div class="input-group">
                <input type="text" id="searchInput" class="form-control" 
                       placeholder="Digite o nome do DataServer...">
                <button class="btn btn-primary" onclick="searchDataServer()">
                    Buscar
                </button>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="json-card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">GET Example</h5>
                        <button class="btn btn-sm btn-outline-primary" onclick="copyGet()">
                            Copiar GET
                        </button>
                    </div>
                    <div class="card-body">
                        <pre id="getJson" class="json-display"></pre>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="json-card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">POST Example</h5>
                        <button class="btn btn-sm btn-outline-primary" onclick="copyPost()">
                            Copiar POST
                        </button>
                    </div>
                    <div class="card-body">
                        <pre id="postJson" class="json-display"></pre>
                    </div>
                </div>
            </div>
        </div>
    </div>  <!-- fechamento do container -->

    <!-- Scripts (nesta ordem) -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        async function searchDataServer() {
            const term = document.getElementById('searchInput').value;
            if (!term) {
                alert('Digite um termo para busca');
                return;
            }

            try {
                const response = await fetch(`/JsonViewer/Search?term=${encodeURIComponent(term)}`);
                const data = await response.json();

                if (data.success && data.data.length > 0) {
                    const result = data.data[0];

                    // Antes do stringify, verificar se j√° √© uma string JSON e fazer parse
                    if (typeof result.getExample === 'string') {
                        try {
                            result.getExample = JSON.parse(result.getExample);
                        } catch (e) {
                            console.warn('GET Example n√£o √© um JSON v√°lido:', e);
                        }
                    }

                    if (typeof result.postExample === 'string') {
                        try {
                            result.postExample = JSON.parse(result.postExample);
                        } catch (e) {
                            console.warn('POST Example n√£o √© um JSON v√°lido:', e);
                        }
                    }

                    document.getElementById('getJson').textContent = 
                        JSON.stringify(result.getExample, null, 4);
                    document.getElementById('postJson').textContent = 
                        JSON.stringify(result.postExample, null, 4);
                } else {
                    alert('Nenhum resultado encontrado');
                }
            } catch (error) {
                console.error('Erro:', error);
                alert('Erro ao buscar dados');
            }
        }

        function copyGet() {
            copyToClipboard('getJson');
        }

        function copyPost() {
            copyToClipboard('postJson');
        }

        function copyToClipboard(elementId) {
            const element = document.getElementById(elementId);
            navigator.clipboard.writeText(element.textContent)
                .then(() => alert('JSON copiado!'))
                .catch(err => alert('Erro ao copiar'));
        }
        
        // Listener para restaura√ß√£o de estado da aba
        window.addEventListener('tabStateRestored', function(event) {
            console.log('Estado da aba JsonViewer sendo restaurado:', event.detail);
            
            // Se h√° um termo de busca salvo, executa a busca automaticamente
            const searchInput = document.getElementById('searchInput');
            if (searchInput && searchInput.value && searchInput.value.trim() !== '') {
                console.log('Restaurando busca para:', searchInput.value);
                // Aguarda um pequeno delay para garantir que a interface esteja pronta
                setTimeout(() => {
                    searchDataServer();
                }, 300);
            }
        });
        
        // Auto-save quando o usu√°rio digita no campo de busca
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            searchInput.addEventListener('input', function() {
                // Trigger auto-save atrav√©s de um evento personalizado que o TabManager escuta
                const inputEvent = new Event('input', { bubbles: true });
                document.dispatchEvent(inputEvent);
            });
        }
    </script>
    <partial name="_AutoLogoutPartial" />
</body>
</html>